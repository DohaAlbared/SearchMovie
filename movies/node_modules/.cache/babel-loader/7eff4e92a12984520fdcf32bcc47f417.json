{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Movies\\\\movies\\\\src\\\\ListMovies.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { GiMagnifyingGlass } from \"react-icons/gi\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport RedirectButton from './Redirect';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateMovie } from './actions/updateAction';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoviesList() {\n  _s();\n\n  const movieData = useSelector(state => state.update.movie);\n  const dispatch = useDispatch();\n  const [selected, setSelected] = useState(false);\n  const [year, setYear] = useState();\n  const [movie, setMovie] = useState();\n  var years = [1999];\n\n  for (var i = 2000; i++; i < 2021) {\n    years.push(i);\n  }\n\n  var feedBack = \"\";\n\n  if (!selected) {\n    feedBack = \"You have not selected a movie yet\";\n  } else if (Response === \"False\") {\n    feedBack = \"Movie is not found\";\n  }\n\n  const handleSelect = eventkey => {\n    setYear(eventkey);\n  };\n\n  const myTextChangeHandler = event => {\n    setMovie(event.target.value);\n  };\n\n  const fetchMovie = () => {\n    setSelected(true);\n    fetch(\"http://www.omdbapi.com/?apikey=3e3f65ea&t=\" + movie + \"&y\" + year).then(response => response.json()).then(data => dispatch(updateMovie(data)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ListPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search A Movie \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ListBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"searchField\",\n            type: \"text\",\n            placeholder: \"Search by movie name\",\n            onChange: myTextChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GiMagnifyingGlass, {\n            size: \"20px\",\n            color: \"grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropDown\",\n          children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n            variant: \"success\",\n            id: \"dropdown-basic-button\",\n            title: \"year\",\n            onSelect: handleSelect,\n            children: years.map(year => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: year,\n              children: [\" \", year, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnn\",\n          onClick: fetchMovie,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [feedBack, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", movieData.Title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Year: \", movieData.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(RedirectButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n}\n\n_s(MoviesList, \"oUnauX5wQRkHV1I/96krrmIRRQE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MoviesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Movies/movies/src/ListMovies.js"],"names":["React","GiMagnifyingGlass","DropdownButton","Dropdown","RedirectButton","useSelector","useDispatch","updateMovie","useState","MoviesList","movieData","state","update","movie","dispatch","selected","setSelected","year","setYear","setMovie","years","i","push","feedBack","Response","handleSelect","eventkey","myTextChangeHandler","event","target","value","fetchMovie","fetch","then","response","json","data","map","Title","Year"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {GiMagnifyingGlass} from \"react-icons/gi\"\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {DropdownButton, Dropdown} from 'react-bootstrap'\r\nimport RedirectButton from './Redirect';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateMovie } from './actions/updateAction';\r\nimport { useState } from 'react';\r\n\r\nexport default function MoviesList(){\r\n    const movieData = useSelector(state => state.update.movie)\r\n    const dispatch =  useDispatch()\r\n    const [selected, setSelected] = useState(false)\r\n    const [year, setYear] = useState()\r\n    const [movie, setMovie] = useState()\r\n    \r\n\r\n    var years = [1999]\r\n    for(var i = 2000; i++; i <2021){\r\n        years.push(i)\r\n    }\r\n    var feedBack = \"\"\r\n    if(!selected){\r\n     feedBack = \"You have not selected a movie yet\" \r\n    }else if(Response ===\"False\"){\r\n     feedBack = \"Movie is not found\"\r\n    } \r\n\r\n    const handleSelect =(eventkey)=>{\r\n        setYear(eventkey)\r\n        \r\n    }\r\n    const myTextChangeHandler =(event)=>{\r\n        setMovie( event.target.value)\r\n    }\r\n\r\n\r\n    const fetchMovie=()=>{\r\n        setSelected(true)\r\n        fetch(\"http://www.omdbapi.com/?apikey=3e3f65ea&t=\" + movie  +\"&y\" + year)\r\n        .then(response => response.json())\r\n        .then(data => dispatch(updateMovie(data)))\r\n    }      \r\n        return(\r\n            <div  className = \"ListPage\">\r\n                <h1>Search A Movie </h1>\r\n                <div className = \"ListBox\">                \r\n                <div className = \"filters\">\r\n                    <div className =\"searchBar\">\r\n                        <input className = \"searchField\"\r\n                            type='text'\r\n                            placeholder = \"Search by movie name\"\r\n                            onChange = {myTextChangeHandler}\r\n                        />\r\n                        <GiMagnifyingGlass size = \"20px\" color = \"grey\"/>\r\n                    </div>\r\n                    <div className= \"dropDown\" >\r\n                        <DropdownButton variant = \"success\" id = \"dropdown-basic-button\" title= \"year\" onSelect = {handleSelect}>\r\n                        {years.map( year => <Dropdown.Item eventKey = {year}> {year} </Dropdown.Item>)}\r\n                        </DropdownButton>\r\n                    </div>    \r\n                    <button className = \"btnn\" onClick = {fetchMovie}>Submit</button>\r\n                </div>              \r\n                <hr/>\r\n                <div>\r\n                     {feedBack} \r\n                     <p>Title: {movieData.Title} </p>\r\n                     <p>Year: {movieData.Year}</p>\r\n                     <RedirectButton/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            \r\n            \r\n        )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}