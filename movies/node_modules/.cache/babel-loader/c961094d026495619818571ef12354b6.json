{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Movies\\\\movies\\\\src\\\\ListMovies.js\";\nimport React from 'react';\nimport { GiMagnifyingGlass } from \"react-icons/gi\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport Redirect from './Redirect';\nimport { De } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MoviesList extends React.Component {\n  constructor() {\n    super(); // var years = [0]\n    // for(let i = 1999; i++; i < 2021){\n    //     years.push(i)\n    // }\n\n    this.handleSelect = eventkey => {\n      console.log(eventkey, \" heo\");\n      this.setState({\n        yearSelected: eventkey\n      });\n    };\n\n    this.myTextChangeHandler = event => {\n      this.setState({\n        movieSearched: event.target.value\n      });\n    };\n\n    this.fetchMovie = () => {\n      this.setState({\n        selected: true\n      });\n      console.log(\"http://www.omdbapi.com/?apikey=3e3f65ea&t=\" + this.state.movieSearched + \"&y\" + this.state.yearSelected);\n      fetch(\"http://www.omdbapi.com/?apikey=3e3f65ea&t=\" + this.state.movieSearched + \"&y\" + this.state.yearSelected).then(response => response.json()).then(data => this.setState({\n        data: data\n      }));\n    };\n\n    this.state = {\n      yearSelected: 0,\n      movieSearched: \"\",\n      selected: false,\n      data: \"\"\n    };\n  }\n\n  render() {\n    var years = [1999, 2000, 2001, 2002, 2018];\n    var feedBack = \"\";\n\n    if (!this.state.selected) {\n      feedBack = \"You have not selected a movie yet\";\n    } else if (this.state.data.Response === \"False\") {\n      feedBack = \"Movie is not found\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ListPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"searchField\",\n            type: \"text\",\n            placeholder: \"Search by movie name\",\n            onChange: this.myTextChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GiMagnifyingGlass, {\n            size: \"20px\",\n            color: \"grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropDown\",\n          children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n            variant: \"success\",\n            id: \"dropdown-basic-button\",\n            title: \"year\",\n            onSelect: this.handleSelect,\n            children: years.map(year => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: year,\n              children: [\" \", year, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 49\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnn\",\n          onClick: this.fetchMovie,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [feedBack, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", this.state.movieSearched]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Year:\", this.state.selected]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          data: this.state.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/Movies/movies/src/ListMovies.js"],"names":["React","GiMagnifyingGlass","DropdownButton","Dropdown","Redirect","De","MoviesList","Component","constructor","handleSelect","eventkey","console","log","setState","yearSelected","myTextChangeHandler","event","movieSearched","target","value","fetchMovie","selected","state","fetch","then","response","json","data","render","years","feedBack","Response","map","year"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {GiMagnifyingGlass} from \"react-icons/gi\"\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {DropdownButton, Dropdown} from 'react-bootstrap'\r\nimport Redirect from './Redirect';\r\nimport { De } from 'react-router-dom';\r\nexport default class MoviesList extends React.Component{\r\n    constructor(){\r\n        super();\r\n        // var years = [0]\r\n        // for(let i = 1999; i++; i < 2021){\r\n        //     years.push(i)\r\n        // }\r\n        this.state = {yearSelected:0, movieSearched: \"\", selected:false, data :\"\"}\r\n    }\r\n\r\n    handleSelect =(eventkey)=>{\r\n        console.log(eventkey, \" heo\")\r\n        this.setState({yearSelected: eventkey})\r\n        \r\n    }\r\n    myTextChangeHandler =(event)=>{\r\n        this.setState({movieSearched : event.target.value})\r\n    }\r\n    fetchMovie=()=>{\r\n        this.setState({selected:true})\r\n        console.log(\"http://www.omdbapi.com/?apikey=3e3f65ea&t=\" + this.state.movieSearched  +\"&y\" + this.state.yearSelected)\r\n        fetch(\"http://www.omdbapi.com/?apikey=3e3f65ea&t=\" + this.state.movieSearched  +\"&y\" + this.state.yearSelected)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({data:data}))\r\n    }\r\n    render(){\r\n       var years = [1999,2000,2001,2002,2018]\r\n       var feedBack = \"\"\r\n       if(!this.state.selected){\r\n        feedBack = \"You have not selected a movie yet\" \r\n       }else if(this.state.data.Response ===\"False\"){\r\n        feedBack = \"Movie is not found\"\r\n       }       \r\n        return(\r\n            <div className = \"ListPage\">\r\n                <div className = \"filters\">\r\n                    <div className =\"searchBar\">\r\n                        <input className = \"searchField\"\r\n                            type='text'\r\n                            placeholder = \"Search by movie name\"\r\n                            onChange = {this.myTextChangeHandler}\r\n                        />\r\n                        <GiMagnifyingGlass size = \"20px\" color = \"grey\"/>\r\n                    </div>\r\n                    <div className= \"dropDown\" >\r\n                        <DropdownButton variant = \"success\" id = \"dropdown-basic-button\" title= \"year\" onSelect = {this.handleSelect}>\r\n                            {years.map( year => <Dropdown.Item eventKey = {year}> {year} </Dropdown.Item>)}\r\n                        </DropdownButton>\r\n                    </div>    \r\n                    <button className = \"btnn\" onClick = {this.fetchMovie}>Submit</button>\r\n                </div>              \r\n                <hr/>\r\n                <div>\r\n                     {feedBack} \r\n                     <p>Title: {this.state.movieSearched}</p>\r\n                     <p>Year:{this.state.selected}</p>\r\n                     <Redirect data = {this.state.data}/>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}