{"ast":null,"code":"import React from 'react';\nimport { GiMagnifyingGlass } from \"react-icons/gi\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport RedirectButton from './Redirect';\nimport { useSelector } from 'react-redux'; // export default function MoviesList(){\n//     const [selected, setSelected] = useState(false)\n//     const [yearSelected, setYear] = useState(0)\n//     const [movieName, movie] = useState(\"\")\n//     var years = [1999,2000,2001,2002,2018]\n//     var feedBack = \"\"\n//     if(!selected){\n//      feedBack = \"You have not selected a movie yet\" \n//     }else if(Response ===\"False\"){\n//      feedBack = \"Movie is not found\"\n//     } \n//     handleSelect =(eventkey)=>{\n//         console.log(eventkey, \" heo\")\n//         this.setState({yearSelected: eventkey})\n//     }\n//     myTextChangeHandler =(event)=>{\n//         this.setState({movieSearched : event.target.value})\n//     }\n//     fetchMovie=()=>{\n//         this.setState({selected:true})\n//         fetch(\"http://www.omdbapi.com/?apikey=3e3f65ea&t=\" + this.state.movieSearched  +\"&y\" + this.state.yearSelected)\n//         .then(response => response.json())\n//         .then(data => this.setState({data:data}))\n//     }      \n//         return(\n//             <div  className = \"ListPage\">\n//                 <h1>Search A Movie</h1>\n//                 <div className = \"ListBox\">                \n//                 <div className = \"filters\">\n//                     <div className =\"searchBar\">\n//                         <input className = \"searchField\"\n//                             type='text'\n//                             placeholder = \"Search by movie name\"\n//                             onChange = {this.myTextChangeHandler}\n//                         />\n//                         <GiMagnifyingGlass size = \"20px\" color = \"grey\"/>\n//                     </div>\n//                     <div className= \"dropDown\" >\n//                         <DropdownButton variant = \"success\" id = \"dropdown-basic-button\" title= \"year\" onSelect = {this.handleSelect}>\n//                             {years.map( year => <Dropdown.Item eventKey = {year}> {year} </Dropdown.Item>)}\n//                         </DropdownButton>\n//                     </div>    \n//                     <button className = \"btnn\" onClick = {this.fetchMovie}>Submit</button>\n//                 </div>              \n//                 <hr/>\n//                 <div>\n//                      {feedBack} \n//                      <p>Title: {this.state.data.Title}</p>\n//                      <p>Year:{this.state.data.Year}</p>\n//                      <RedirectButton movieData = {this.state.data}/>\n//                 </div>\n//             </div>\n//             </div>\n//         )\n// }\n// export default class MoviesList extends React.Component{\n//     constructor(){\n//         super();\n//         // const movie = useSelector(state=>state.UpdateReducer)\n//         this.state = {yearSelected:0, movieSearched: \"\", selected:false, data :\"\"}\n//     }\n//     handleSelect =(eventkey)=>{\n//         console.log(eventkey, \" heo\")\n//         this.setState({yearSelected: eventkey})\n//     }\n//     myTextChangeHandler =(event)=>{\n//         this.setState({movieSearched : event.target.value})\n//     }\n//     fetchMovie=()=>{\n//         this.setState({selected:true})\n//         fetch(\"http://www.omdbapi.com/?apikey=3e3f65ea&t=\" + this.state.movieSearched  +\"&y\" + this.state.yearSelected)\n//         .then(response => response.json())\n//         .then(data => this.setState({data:data}))\n//     }\n//     render(){\n//        var years = [1999,2000,2001,2002,2018]\n//        var feedBack = \"\"\n//        if(!this.state.selected){\n//         feedBack = \"You have not selected a movie yet\" \n//        }else if(this.state.data.Response ===\"False\"){\n//         feedBack = \"Movie is not found\"\n//        }       \n//         return(\n//             <div  className = \"ListPage\">\n//                 <h1>Search A Movie</h1>\n//                 <div className = \"ListBox\">                \n//                 <div className = \"filters\">\n//                     <div className =\"searchBar\">\n//                         <input className = \"searchField\"\n//                             type='text'\n//                             placeholder = \"Search by movie name\"\n//                             onChange = {this.myTextChangeHandler}\n//                         />\n//                         <GiMagnifyingGlass size = \"20px\" color = \"grey\"/>\n//                     </div>\n//                     <div className= \"dropDown\" >\n//                         <DropdownButton variant = \"success\" id = \"dropdown-basic-button\" title= \"year\" onSelect = {this.handleSelect}>\n//                             {years.map( year => <Dropdown.Item eventKey = {year}> {year} </Dropdown.Item>)}\n//                         </DropdownButton>\n//                     </div>    \n//                     <button className = \"btnn\" onClick = {this.fetchMovie}>Submit</button>\n//                 </div>              \n//                 <hr/>\n//                 <div>\n//                      {feedBack} \n//                      <RedirectButton movieData = {this.state.data}/>\n//                 </div>\n//             </div>\n//             </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["C:/Users/User/Desktop/Movies/movies/src/ListMovies.js"],"names":["React","GiMagnifyingGlass","DropdownButton","Dropdown","RedirectButton","useSelector"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,OAAO,kCAAP;AACA,SAAQC,cAAR,EAAwBC,QAAxB,QAAuC,iBAAvC;AACA,OAAOC,cAAP,MAA2B,YAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA","sourcesContent":["import React from 'react'\r\nimport {GiMagnifyingGlass} from \"react-icons/gi\"\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {DropdownButton, Dropdown} from 'react-bootstrap'\r\nimport RedirectButton from './Redirect';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n// export default function MoviesList(){\r\n//     const [selected, setSelected] = useState(false)\r\n//     const [yearSelected, setYear] = useState(0)\r\n//     const [movieName, movie] = useState(\"\")\r\n\r\n//     var years = [1999,2000,2001,2002,2018]\r\n//     var feedBack = \"\"\r\n//     if(!selected){\r\n//      feedBack = \"You have not selected a movie yet\" \r\n//     }else if(Response ===\"False\"){\r\n//      feedBack = \"Movie is not found\"\r\n//     } \r\n\r\n//     handleSelect =(eventkey)=>{\r\n//         console.log(eventkey, \" heo\")\r\n//         this.setState({yearSelected: eventkey})\r\n        \r\n//     }\r\n//     myTextChangeHandler =(event)=>{\r\n//         this.setState({movieSearched : event.target.value})\r\n//     }\r\n//     fetchMovie=()=>{\r\n//         this.setState({selected:true})\r\n//         fetch(\"http://www.omdbapi.com/?apikey=3e3f65ea&t=\" + this.state.movieSearched  +\"&y\" + this.state.yearSelected)\r\n//         .then(response => response.json())\r\n//         .then(data => this.setState({data:data}))\r\n//     }      \r\n//         return(\r\n//             <div  className = \"ListPage\">\r\n//                 <h1>Search A Movie</h1>\r\n//                 <div className = \"ListBox\">                \r\n//                 <div className = \"filters\">\r\n//                     <div className =\"searchBar\">\r\n//                         <input className = \"searchField\"\r\n//                             type='text'\r\n//                             placeholder = \"Search by movie name\"\r\n//                             onChange = {this.myTextChangeHandler}\r\n//                         />\r\n//                         <GiMagnifyingGlass size = \"20px\" color = \"grey\"/>\r\n//                     </div>\r\n//                     <div className= \"dropDown\" >\r\n//                         <DropdownButton variant = \"success\" id = \"dropdown-basic-button\" title= \"year\" onSelect = {this.handleSelect}>\r\n//                             {years.map( year => <Dropdown.Item eventKey = {year}> {year} </Dropdown.Item>)}\r\n//                         </DropdownButton>\r\n//                     </div>    \r\n//                     <button className = \"btnn\" onClick = {this.fetchMovie}>Submit</button>\r\n//                 </div>              \r\n//                 <hr/>\r\n//                 <div>\r\n//                      {feedBack} \r\n//                      <p>Title: {this.state.data.Title}</p>\r\n//                      <p>Year:{this.state.data.Year}</p>\r\n//                      <RedirectButton movieData = {this.state.data}/>\r\n//                 </div>\r\n//             </div>\r\n//             </div>\r\n            \r\n            \r\n//         )\r\n// }\r\n\r\n\r\n\r\n// export default class MoviesList extends React.Component{\r\n//     constructor(){\r\n//         super();\r\n//         // const movie = useSelector(state=>state.UpdateReducer)\r\n//         this.state = {yearSelected:0, movieSearched: \"\", selected:false, data :\"\"}\r\n//     }\r\n\r\n//     handleSelect =(eventkey)=>{\r\n//         console.log(eventkey, \" heo\")\r\n//         this.setState({yearSelected: eventkey})\r\n        \r\n//     }\r\n//     myTextChangeHandler =(event)=>{\r\n//         this.setState({movieSearched : event.target.value})\r\n//     }\r\n//     fetchMovie=()=>{\r\n//         this.setState({selected:true})\r\n//         fetch(\"http://www.omdbapi.com/?apikey=3e3f65ea&t=\" + this.state.movieSearched  +\"&y\" + this.state.yearSelected)\r\n//         .then(response => response.json())\r\n//         .then(data => this.setState({data:data}))\r\n//     }\r\n//     render(){\r\n//        var years = [1999,2000,2001,2002,2018]\r\n//        var feedBack = \"\"\r\n//        if(!this.state.selected){\r\n//         feedBack = \"You have not selected a movie yet\" \r\n//        }else if(this.state.data.Response ===\"False\"){\r\n//         feedBack = \"Movie is not found\"\r\n//        }       \r\n//         return(\r\n//             <div  className = \"ListPage\">\r\n//                 <h1>Search A Movie</h1>\r\n//                 <div className = \"ListBox\">                \r\n//                 <div className = \"filters\">\r\n//                     <div className =\"searchBar\">\r\n//                         <input className = \"searchField\"\r\n//                             type='text'\r\n//                             placeholder = \"Search by movie name\"\r\n//                             onChange = {this.myTextChangeHandler}\r\n//                         />\r\n//                         <GiMagnifyingGlass size = \"20px\" color = \"grey\"/>\r\n//                     </div>\r\n//                     <div className= \"dropDown\" >\r\n//                         <DropdownButton variant = \"success\" id = \"dropdown-basic-button\" title= \"year\" onSelect = {this.handleSelect}>\r\n//                             {years.map( year => <Dropdown.Item eventKey = {year}> {year} </Dropdown.Item>)}\r\n//                         </DropdownButton>\r\n//                     </div>    \r\n//                     <button className = \"btnn\" onClick = {this.fetchMovie}>Submit</button>\r\n//                 </div>              \r\n//                 <hr/>\r\n//                 <div>\r\n//                      {feedBack} \r\n//                      <RedirectButton movieData = {this.state.data}/>\r\n//                 </div>\r\n//             </div>\r\n//             </div>\r\n            \r\n            \r\n//         )\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}